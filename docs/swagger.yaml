definitions:
  structs.Live:
    properties:
      datematch:
        type: string
      id:
        type: integer
      idchampionship:
        type: integer
      stadium:
        type: string
      teamid1:
        type: integer
      teamid2:
        type: integer
      teampoints1:
        type: integer
      teampoints2:
        type: integer
    type: object
  structs.Player:
    properties:
      birth:
        type: string
      city:
        type: string
      country:
        type: string
      height:
        type: number
      id:
        type: integer
      idteam:
        type: integer
      name:
        type: string
      position:
        type: string
    type: object
  structs.Team:
    properties:
      city:
        type: string
      color1:
        type: string
      country:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This API allows users to manage football teams and players. Users can
    enter new teams and players, update existing information, and view details.
  title: Squads API
paths:
  /api/v1/live/getall:
    get:
      consumes:
      - application/json
      description: Get all matches
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/structs.Live'
            type: array
      summary: Get all matches
      tags:
      - Live
  /api/v1/live/getallbyidteam/{id}:
    get:
      consumes:
      - application/json
      description: Get all matches by team id
      parameters:
      - description: Team ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/structs.Live'
            type: array
      summary: Get all matches by team id
      tags:
      - Live
  /api/v1/live/getalltoday:
    get:
      consumes:
      - application/json
      description: Get all matches today
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/structs.Live'
            type: array
      summary: Get all matches today
      tags:
      - Live
  /api/v1/live/insert:
    post:
      consumes:
      - application/json
      description: Insert a live match
      parameters:
      - description: Team ID 1
        in: query
        name: idteam1
        required: true
        type: integer
      - description: Team ID 2
        in: query
        name: idteam2
        required: true
        type: integer
      - description: IdChampionship
        in: query
        name: idchampionship
        required: true
        type: integer
      - description: Date of Match
        in: query
        name: datematch
        required: true
        type: string
      - description: Stadium
        in: query
        name: stadium
        required: true
        type: string
      - description: Team Points 1
        in: query
        name: teampoints1
        required: true
        type: integer
      - description: Team Points 2
        in: query
        name: teampoints2
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Live'
      summary: Insert a live match
      tags:
      - Live
  /api/v1/player/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a player by ID
      parameters:
      - description: Player ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete a player by ID
      tags:
      - Players
  /api/v1/player/getall:
    get:
      consumes:
      - application/json
      description: Get all players
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/structs.Player'
            type: array
      summary: Get all players
      tags:
      - Players
  /api/v1/player/getbycountry/{country}:
    get:
      consumes:
      - application/json
      description: Get players by country
      parameters:
      - description: Country Name
        in: path
        name: country
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/structs.Player'
            type: array
      summary: Get players by country
      tags:
      - Players
  /api/v1/player/getbyid/{id}:
    get:
      consumes:
      - application/json
      description: Get a player by ID
      parameters:
      - description: Player ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Player'
      summary: Get a player by ID
      tags:
      - Players
  /api/v1/player/getbyidteam/{idteam}:
    get:
      consumes:
      - application/json
      description: Get players by team ID
      parameters:
      - description: IdTeam
        in: path
        name: idteam
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/structs.Player'
            type: array
      summary: Get players by team ID
      tags:
      - Players
  /api/v1/player/getbyname/{name}:
    get:
      consumes:
      - application/json
      description: Get players by name
      parameters:
      - description: Player Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/structs.Player'
            type: array
      summary: Get players by name
      tags:
      - Players
  /api/v1/player/insert:
    post:
      consumes:
      - application/json
      description: Insert a player
      parameters:
      - description: Player Name
        in: query
        name: name
        required: true
        type: string
      - description: Id Team
        in: query
        name: idteam
        required: true
        type: string
      - description: City
        in: query
        name: city
        required: true
        type: string
      - description: Country
        in: query
        name: country
        required: true
        type: string
      - description: Birth
        in: query
        name: birth
        required: true
        type: string
      - description: Height
        in: query
        name: height
        required: true
        type: string
      - description: Position
        in: query
        name: position
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Player'
      summary: Insert a player
      tags:
      - Players
  /api/v1/player/update:
    put:
      consumes:
      - application/json
      description: Update a player
      parameters:
      - description: ID Player
        in: query
        name: id
        required: true
        type: integer
      - description: Player Name
        in: query
        name: name
        required: true
        type: string
      - description: Id Team
        in: query
        name: idteam
        required: true
        type: integer
      - description: City
        in: query
        name: city
        required: true
        type: string
      - description: Country
        in: query
        name: country
        required: true
        type: string
      - description: Birth
        in: query
        name: birth
        required: true
        type: string
      - description: Height
        in: query
        name: height
        required: true
        type: string
      - description: Position
        in: query
        name: position
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Player'
      summary: Update a player
      tags:
      - Players
  /api/v1/team/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a team by ID
      parameters:
      - description: Team ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete a team by ID
      tags:
      - Teams
  /api/v1/team/getall:
    get:
      consumes:
      - application/json
      description: Get all teams
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/structs.Team'
            type: array
      summary: Get all teams
      tags:
      - Teams
  /api/v1/team/getbycountry/{country}:
    get:
      consumes:
      - application/json
      description: Get teams by country
      parameters:
      - description: Country Name
        in: path
        name: country
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/structs.Team'
            type: array
      summary: Get teams by country
      tags:
      - Teams
  /api/v1/team/getbyid/{id}:
    get:
      consumes:
      - application/json
      description: Get a team by ID
      parameters:
      - description: Team ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Team'
      summary: Get a team by ID
      tags:
      - Teams
  /api/v1/team/getbyname/{name}:
    get:
      consumes:
      - application/json
      description: Get teams by name
      parameters:
      - description: Team Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/structs.Team'
            type: array
      summary: Get teams by name
      tags:
      - Teams
  /api/v1/team/insert:
    post:
      consumes:
      - application/json
      description: Insert a team
      parameters:
      - description: Team Name
        in: query
        name: name
        required: true
        type: string
      - description: City
        in: query
        name: city
        required: true
        type: string
      - description: Country
        in: query
        name: country
        required: true
        type: string
      - description: Color1
        in: query
        name: color1
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Team'
      summary: Insert a team
      tags:
      - Teams
  /api/v1/team/update:
    put:
      consumes:
      - application/json
      description: Update a team
      parameters:
      - description: ID Team
        in: query
        name: id
        required: true
        type: integer
      - description: Team Name
        in: query
        name: name
        required: true
        type: string
      - description: City
        in: query
        name: city
        required: true
        type: string
      - description: Country
        in: query
        name: country
        required: true
        type: string
      - description: Color1
        in: query
        name: color1
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Team'
      summary: Update a team
      tags:
      - Teams
schemes:
- http
swagger: "2.0"
